name: js-build
on:
  workflow_call:
    inputs:
      PRIMUS_REF:
        description: 'The primus ref to checkout.'
        required: true
        default: 'main'
        type: string
      JS_WORKDIR:
        description: 'The working directory. If not provided, the defaults to the root of the repository.'
        default: '.'
        type: string
      JS_DOTENV_CACHE_KEY:
        description: 'The key to cache the dotenv file.'
        type: string
      JS_DOWNLOAD_ARTIFACT_RUN_ID:
        description: 'The run id of the artifact to download. If not provided, the default is the current run id.'
        type: string
      JS_UPLOAD_ARTIFACT_NAME:
        description: 'The artifact name to upload.'
        type: string
      JS_UPLOAD_ARTIFACT_PATH:
        description: 'Path of the artifact to upload.'
        type: string
      DOCKER_BUILD:
        description: 'Whether to build the docker image or not.'
        default: true
        type: boolean
      DOCKER_BASE_IMAGES:
        description: 'List of docker base images in json.'
        type: string
      DOCKER_DOCKERFILE_PATH:
        description: 'Path to dockerfile.'
        type: string
      DOCKER_MANIFEST:
        description: 'Whether to push the docker image or not.'
        required: true
        type: boolean
      DOCKER_ARCHS:
        description: 'List of architectures to build the docker image.'
        default: 'amd64 arm64'
        type: string
      DOCKER_PROVIDERS:
        description: 'The docker providers to use, separated by commas without spaces. (hub,gcp,aws)'
        default: 'hub'
        type: string
defaults:
  run:
    shell: bash

env:
  PRIMUS_HOME: .primus
  MAKE: make --no-print-directory --makefile=.primus/src/make/main.mk
  
jobs:
  docker:
    runs-on: ubuntu-latest
    environment: ${{ github.ref_type == 'tag' && 'production' || github.ref_name == 'main' && 'staging' || 'review' }}
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: self-checkout
        uses: actions/checkout@v4
      - id: token
        name: github-token-gen
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.PRIMUS_APP_ID }}
          private-key: ${{ secrets.PRIMUS_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}
      - name: primus-checkout
        uses: actions/checkout@v4
        with:
          repository: signoz/primus
          ref: ${{ inputs.PRIMUS_REF }}
          path: .primus
          token: ${{ steps.token.outputs.token }}
      - name: qemu-install
        uses: docker/setup-qemu-action@v3
      - name: info
        run: |
          $MAKE info
      - name: dotenv-cache
        if: ${{ inputs.JS_DOTENV_CACHE_KEY }}
        uses: actions/cache@v4
        with:
          key: ${{ inputs.JS_DOTENV_CACHE_KEY }}
          path: ${{ inputs.JS_WORKDIR }}/.env
      - name: js-build
        run: |
          $MAKE js-build JS_WORKDIR='${{ inputs.JS_WORKDIR }}'
      - name: upload-artifact
        if: ${{ inputs.JS_UPLOAD_ARTIFACT_NAME && inputs.JS_UPLOAD_ARTIFACT_PATH }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.JS_UPLOAD_ARTIFACT_NAME }}
          path: ${{ inputs.JS_UPLOAD_ARTIFACT_PATH }}
      - name: docker-build
        if: ${{ inputs.DOCKER_BUILD }}
        run: |
          $MAKE docker-build DOCKER_ARCHS='${{ inputs.DOCKER_ARCHS }}' DOCKER_BASE_IMAGES='${{ inputs.DOCKER_BASE_IMAGES }}' DOCKER_DOCKERFILE_PATH="${{ inputs.DOCKER_DOCKERFILE_PATH }}"
      - name: gcp-signoz
        if: ${{ inputs.DOCKER_MANIFEST }}
        run: |
          echo "GCP_PROJECT_ID=$($MAKE signoz-gcp-project-id)" >> $GITHUB_ENV
          echo "GCP_WORKLOAD_IDENTITY_PROVIDER=$($MAKE signoz-gcp-workload-identity-provider)" >> $GITHUB_ENV
          echo "GCP_SERVICE_ACCOUNT=$($MAKE signoz-gcp-service-account)" >> $GITHUB_ENV
      - name: gcp-auth
        if: ${{ inputs.DOCKER_MANIFEST }}
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: ${{ env.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.GCP_SERVICE_ACCOUNT }}
      - name: sdk-install
        if: ${{ inputs.DOCKER_MANIFEST }}
        uses: 'google-github-actions/setup-gcloud@v2'
      - name: docker-manifest
        if: ${{ inputs.DOCKER_MANIFEST }}
        run: |
          IFS=',' read -ra PROVIDERS <<< "${{ inputs.DOCKER_PROVIDERS }}"
          for provider in "${PROVIDERS[@]}"; do
            echo "Building manifest for the $provider provider"
            $MAKE docker-login-$provider docker-push docker-manifest DOCKER_PROVIDER="$provider" DOCKER_ARCHS='${{ inputs.DOCKER_ARCHS }}' DOCKER_BASE_IMAGES='${{ inputs.DOCKER_BASE_IMAGES }}' DOCKER_DOCKERFILE_PATH="${{ inputs.DOCKER_DOCKERFILE_PATH }}"
          done
